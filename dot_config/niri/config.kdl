// Input device configuration.
input {
    keyboard {
        xkb {

        }

    }

    touchpad {
        tap
        tap-button-map "left-right-middle"
        click-method "clickfinger"
        dwt
        drag true
        drag-lock
        natural-scroll
        accel-speed 0.2
        accel-profile "flat"
        scroll-method "two-finger"
    }

    mouse {
        // off
        // natural-scroll
        // accel-speed 0.2
        // accel-profile "flat"
        // scroll-method "no-scroll"
    }

     warp-mouse-to-focus
     focus-follows-mouse max-scroll-amount="0%"

}

output "eDP-1" {
    mode "1920x1200@60"
    scale 1.25 
    transform "normal"
    variable-refresh-rate
}


layout {
    // Set gaps around windows in logical pixels.
    gaps 4 

    center-focused-column "never"
    preset-column-widths {
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }

    default-column-width { proportion 0.5; }
    focus-ring {
        width 2

        // Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.

        // Color of the ring on the active monitor.
        active-color "#7fc8ff"

        // Color of the ring on inactive monitors.
        inactive-color "#505050"

        // You can also use gradients. They take precedence over solid colors.
        // Gradients are rendered the same as CSS linear-gradient(angle, from, to).
        // The angle is the same as in linear-gradient, and is optional,
        // defaulting to 180 (top-to-bottom gradient).
        // You can use any CSS linear-gradient tool on the web to set these up.
        // Changing the color space is also supported, check the wiki for more info.
        //
        // active-gradient from="#80c8ff" to="#bbddff" angle=45

        // You can also color the gradient relative to the entire view
        // of the workspace, rather than relative to just the window itself.
        // To do that, set relative-to="workspace-view".
        //
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    // border {
    //     // The settings are the same as for the focus ring.
    //     // If you enable the border, you probably want to disable the focus ring.
    //     off

    //     width 4
    //     active-color "#ffc87f"
    //     inactive-color "#505050"

    //     // Color of the border around windows that request your attention.
    //     urgent-color "#9b0000"

    // }

    // You can enable drop shadows for windows.
    shadow {
        // Uncomment the next line to enable shadows.
        // on

        // By default, the shadow draws only around its window, and not behind it.
        // Uncomment this setting to make the shadow draw behind its window.
        //
        // Note that niri has no way of knowing about the CSD window corner
        // radius. It has to assume that windows have square corners, leading to
        // shadow artifacts inside the CSD rounded corners. This setting fixes
        // those artifacts.
        // 
        // However, instead you may want to set prefer-no-csd and/or
        // geometry-corner-radius. Then, niri will know the corner radius and
        // draw the shadow correctly, without having to draw it behind the
        // window. These will also remove client-side shadows if the window
        // draws any.
        // 
        // draw-behind-window true

        // You can change how shadows look. The values below are in logical
        // pixels and match the CSS box-shadow properties.

        // Softness controls the shadow blur radius.
        softness 30

        // Spread expands the shadow.
        spread 5

        // Offset moves the shadow relative to the window.
        offset x=0 y=5

        // You can also change the shadow color and opacity.
        color "#0007"
    }

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
    background-color "transparent"
}

prefer-no-csd

// Put swaybg inside the overview backdrop.
layer-rule {
    match namespace="^wallpaper$"
    match namespace="^quickshell-overview$"
    place-within-backdrop true
}
layer-rule {
    match namespace="^quickshell-wallpaper$"
}

cursor {
    xcursor-theme "breeze_cursors"
    xcursor-size 28
    hide-after-inactive-ms 2000
}

// System
// spawn-at-startup "waybar"
spawn-at-startup "swayosd-server"
spawn-at-startup "fcitx5"
spawn-at-startup "xwayland-satellite"
// spawn-at-startup "mako"
// spawn-at-startup "bash" "-c" "swaybg --image $HOME/Pictures/wallpapers/asian_woman.jpg --mode fill"
spawn-at-startup "hypridle"
spawn-at-startup "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
spawn-at-startup "bash" "-c" "walker --gapplication-service"
spawn-at-startup "bash" "-c" "wl-paste --watch cliphist store &"
spawn-at-startup "bash" "-c" "udiskie -t -A" 

// Dank material
// spawn-at-startup "qs" "-c" "DankMaterialShell"

spawn-at-startup "qs" "-c" "noctalia-shell"

spawn-at-startup "zen-browser"

// Chat
spawn-at-startup "Telegram"
spawn-at-startup "discord"

// Gaming
//spawn-at-startup "flatpak" "run" "com.valvesoftware.Steam"

// Utils
spawn-at-startup "syncthing"
spawn-at-startup "keepassxc"
// spawn-at-startup "codium"
//spawn-at-startup "throne"
// spawn-at-startup "xsettingsd"


screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

animations {
    // off

    // slowdown 3.0
}


workspace "browser"
workspace "coding"
workspace "chat"
workspace "gaming"
workspace "utils"

// Browser workspace
window-rule {
    match app-id="zen"
    open-on-workspace "browser"
    open-focused true
}
window-rule {
    match app-id="codium"
    open-on-workspace "coding"
}
// Chat worksplace
window-rule {
    match app-id="org.telegram.desktop"
    match app-id="discord"
    open-on-workspace "chat"
    // open-focused true
}
window-rule {
    match app-id="discord"
    open-focused false
}
// Gaming workspace
window-rule {
    match app-id="steam"
    open-on-workspace "gaming"
}

// Utils workspace
window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    exclude app-id=r#"^org\.keepassxc\.KeePassXC$"# title="^Unlock Database - KeePassXC$"
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    match app-id="org.gnome.SystemMonitor"
    match app-id=r#"kitty$"# title="^$$bluetuith"
    match app-id="org.fcitx.fcitx5-config-qt"
    match app-id="Throne"
    open-on-workspace "utils"

}

// Always focus the KeePassXC-Browser unlock dialog.
//
// This dialog opens parented to the KeePassXC window rather than the browser,
// so it doesn't get auto-focused by default.
window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"# title="^Unlock Database - KeePassXC$"

    open-focused true
}

// Floating rule
window-rule {
    match app-id=r#"zen$"# title="^Picture-in-Picture$"
    match app-id="mpv"
    open-floating true
    default-column-width { fixed 480; }
    default-window-height { fixed 270; }
    default-floating-position x=32 y=32 relative-to="top-right"
}
// Block from screen-capture
window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    match app-id="org.telegram.desktop"
    match app-id="discord"
    match app-id="zen" title="ВКонтакте"
    block-out-from "screen-capture"
}

// Example: enable rounded corners for all windows.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    geometry-corner-radius 2
    clip-to-geometry true
}
// window-rule {
//     match is-focused=false
//     opacity 0.9
// }
hotkey-overlay {
    skip-at-startup
}

// layer-rule {
//     match namespace="waybar"
//     match at-startup=true

//     geometry-corner-radius 0
//     place-within-backdrop true
// }
binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Applications
    Mod+T hotkey-overlay-title="Open a Terminal: kitty" { spawn "kitty"; }
    Mod+Space hotkey-overlay-title="Run an Application: walker" { spawn "fuzzel"; }
    Super+Alt+L hotkey-overlay-title="Logout menu" { spawn "wlogout"; }
    Mod+E hotkey-overlay-title="GNOME Files" {spawn "nautilus";}

    // Audio control
    // XF86AudioRaiseVolume allow-when-locked=true { spawn "swayosd-client" "--output-volume" "+5"; }
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "5%+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "5%-"; }
    Mod+XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.75"; }
    Mod+XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.2"; }
    
    XF86AudioMute allow-when-locked=true { spawn "swayosd-client" "--output-volume=mute-toggle"; }
   XF86AudioMicMute allow-when-locked=true { spawn "swayosd-client" "--input-volume=mute-toggle"; }
    XF86AudioPause allow-when-locked=true {spawn "swayosd-client" "--playerctl=play-pause";}
    XF86AudioPlay allow-when-locked=true {spawn "swayosd-client" "--playerctl=play-pause";}
    XF86AudioNext allow-when-locked=true {spawn "swayosd-client" "--playerctl=next";}
    XF86AudioPrev allow-when-locked=true {spawn "swayosd-client" "--playerctl=previous";}
    
    // Brightness control
    XF86MonBrightnessDown allow-when-locked=true {spawn "brightnessctl" "set" "5%-";} 
    XF86MonBrightnessUp allow-when-locked=true {spawn "brightnessctl" "set" "+5%";}
    Super+XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "set" "50%"; } 
    Super+XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "set" "100%"; } 

    // Navigation
    Mod+O repeat=false { toggle-overview; }
    Mod+Q { close-window; }

    // Move focus
    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }
    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }

    // Move windows
    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }
    Mod+Ctrl+L     { move-column-right; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    // Monitors
    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }
    Mod+Shift+H     { focus-monitor-left; }
    Mod+Shift+J     { focus-monitor-down; }
    Mod+Shift+K     { focus-monitor-up; }
    Mod+Shift+L     { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }
    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace "browser"; }
    Mod+2 { focus-workspace "coding"; }
    Mod+3 { focus-workspace "chat"; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace "utils"; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace "browser"; }
    Mod+Ctrl+2 { move-column-to-workspace "coding"; }
    Mod+Ctrl+3 { move-column-to-workspace "chat"; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace "utils"; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    // Switches focus between the current and the previous workspace.
    Mod+Tab { focus-workspace-previous; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Mod+Period { expel-window-from-column; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Center all fully visible columns on screen.
    Mod+Ctrl+C { center-visible-columns; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+B       { toggle-window-floating; }
    Mod+Shift+B { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // Mouse
    Mod+G {spawn "wl-kbptr";}

    // Scripts
    // Walker
    Mod+V {spawn "qs" "-c" "noctalia-shell" "ipc" "call" "launcher" "clipboard"; }
    Mod+S {spawn "bash" "-c" "walker --modules finder"; }
    // Mod+P {spawn "qs" "-c" "DankMaterialShell" "ipc" "call" "processlist" "toggle";}

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }
}

switch-events {
    tablet-mode-on { spawn "bash" "-c" "gsettings set org.gnome.desktop.a11y.applications screen-keyboard-enabled true"; }
    tablet-mode-off { spawn "bash" "-c" "gsettings set org.gnome.desktop.a11y.applications screen-keyboard-enabled false"; }
}

debug {
  honor-xdg-activation-with-invalid-serial
}

environment {
    QT_QPA_PLATFORM "wayland"
    GDK_BACKEND "wayland"
    CLUTTER_BACKEND "wayland"
    DISPLAY ":0"
    EDITOR "nvim"
    COMPOSITOR "niri"
    GTK_THEME "Tokyonight-Dark-Moon"

    // QT_AUTO_SCREEN_SCALE_FACTOR "1"
    QT_QPA_PLATFORMTHEME "gtk3"
    QT_QPA_PLATFORMTHEME_QT6 "gtk3"
    ELECTRON_OZONE_PLATFORM_HINT "wayland"

    // Fcitx5
    XMODIFIERS "@im=fcitx"
    QT_IM_MODULE "fcitx"
    GTK_IM_MODULE "fcitx"
    SDL_IM_MODULE "fcitx"
}
